//TODO copyright header

// This file was automatically generated by lister-gen

package v1alpha1

import (
	v1alpha1 "github.com/cloudfoundry-incubator/service-fabrik-apiserver/pkg/apis/deployment/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// VirtualhostLister helps list Virtualhosts.
type VirtualhostLister interface {
	// List lists all Virtualhosts in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.Virtualhost, err error)
	// Virtualhosts returns an object that can list and get Virtualhosts.
	Virtualhosts(namespace string) VirtualhostNamespaceLister
	VirtualhostListerExpansion
}

// virtualhostLister implements the VirtualhostLister interface.
type virtualhostLister struct {
	indexer cache.Indexer
}

// NewVirtualhostLister returns a new VirtualhostLister.
func NewVirtualhostLister(indexer cache.Indexer) VirtualhostLister {
	return &virtualhostLister{indexer: indexer}
}

// List lists all Virtualhosts in the indexer.
func (s *virtualhostLister) List(selector labels.Selector) (ret []*v1alpha1.Virtualhost, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.Virtualhost))
	})
	return ret, err
}

// Virtualhosts returns an object that can list and get Virtualhosts.
func (s *virtualhostLister) Virtualhosts(namespace string) VirtualhostNamespaceLister {
	return virtualhostNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// VirtualhostNamespaceLister helps list and get Virtualhosts.
type VirtualhostNamespaceLister interface {
	// List lists all Virtualhosts in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.Virtualhost, err error)
	// Get retrieves the Virtualhost from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.Virtualhost, error)
	VirtualhostNamespaceListerExpansion
}

// virtualhostNamespaceLister implements the VirtualhostNamespaceLister
// interface.
type virtualhostNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all Virtualhosts in the indexer for a given namespace.
func (s virtualhostNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.Virtualhost, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.Virtualhost))
	})
	return ret, err
}

// Get retrieves the Virtualhost from the indexer for a given namespace and name.
func (s virtualhostNamespaceLister) Get(name string) (*v1alpha1.Virtualhost, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("virtualhost"), name)
	}
	return obj.(*v1alpha1.Virtualhost), nil
}
