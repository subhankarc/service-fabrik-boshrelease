//TODO copyright header

// This file was automatically generated by lister-gen

package v1alpha1

import (
	v1alpha1 "github.com/cloudfoundry-incubator/service-fabrik-apiserver/pkg/apis/bind/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// VirtualhostbindLister helps list Virtualhostbinds.
type VirtualhostbindLister interface {
	// List lists all Virtualhostbinds in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.Virtualhostbind, err error)
	// Virtualhostbinds returns an object that can list and get Virtualhostbinds.
	Virtualhostbinds(namespace string) VirtualhostbindNamespaceLister
	VirtualhostbindListerExpansion
}

// virtualhostbindLister implements the VirtualhostbindLister interface.
type virtualhostbindLister struct {
	indexer cache.Indexer
}

// NewVirtualhostbindLister returns a new VirtualhostbindLister.
func NewVirtualhostbindLister(indexer cache.Indexer) VirtualhostbindLister {
	return &virtualhostbindLister{indexer: indexer}
}

// List lists all Virtualhostbinds in the indexer.
func (s *virtualhostbindLister) List(selector labels.Selector) (ret []*v1alpha1.Virtualhostbind, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.Virtualhostbind))
	})
	return ret, err
}

// Virtualhostbinds returns an object that can list and get Virtualhostbinds.
func (s *virtualhostbindLister) Virtualhostbinds(namespace string) VirtualhostbindNamespaceLister {
	return virtualhostbindNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// VirtualhostbindNamespaceLister helps list and get Virtualhostbinds.
type VirtualhostbindNamespaceLister interface {
	// List lists all Virtualhostbinds in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.Virtualhostbind, err error)
	// Get retrieves the Virtualhostbind from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.Virtualhostbind, error)
	VirtualhostbindNamespaceListerExpansion
}

// virtualhostbindNamespaceLister implements the VirtualhostbindNamespaceLister
// interface.
type virtualhostbindNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all Virtualhostbinds in the indexer for a given namespace.
func (s virtualhostbindNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.Virtualhostbind, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.Virtualhostbind))
	})
	return ret, err
}

// Get retrieves the Virtualhostbind from the indexer for a given namespace and name.
func (s virtualhostbindNamespaceLister) Get(name string) (*v1alpha1.Virtualhostbind, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("virtualhostbind"), name)
	}
	return obj.(*v1alpha1.Virtualhostbind), nil
}
