<%
  def ostruct_to_hash(os)
    os.marshal_dump.map do |key, value|
      { key => value.is_a?(OpenStruct) ? ostruct_to_hash(value) : value }
    end.reduce(&:merge)
  end

  broker_name = link("broker").p('name')
  log_path = "/var/vcap/sys/log/service-fabrik-virtualhost-manager/service-fabrik-virtualhost-manager.log"
  external = link("broker").p('external')
  internal = link("broker").p('internal')
%>---
production:
  ####################
  # GENERAL SETTINGS #
  ####################
  username: '<%= link("broker").p('username') %>'
  password: '<%= link("broker").p('password') %>'
  broker_ip: <%= spec.ip %>
  enable_service_fabrik_v2: <%= link("broker").p('enable_service_fabrik_v2') %>
  skip_ssl_validation: <%= link("broker").p('skip_ssl_validation') %>
  session_store:
    path: <%= "/var/vcap/store/#{broker_name}/session" %>
  log_path: <%= log_path %>
  log_level: <%= link("broker").p('log_level') %>
  enable_circuit_breaker: <%= link("broker").p('enable_circuit_breaker') %>
  http_timeout: <%= link("broker").p('http_timeout') %>
  broker_drain_message: <%= link("broker").p('broker_drain_message') %>
  ##############################
  # EXTERNAL ENDPOINT SETTINGS #
  ##############################
  external:
    protocol: 'https'
    host: <%= external['host'] %>
    cookie_secure: true
    session_expiry: <%= external['session_expiry'] %>

  ##############################
  # INTERNAL ENDPOINT SETTINGS #
  ##############################
  internal:
    ip: <%= "#{internal['ip']}" %>
    host: <%= "#{internal['ip']}:#{internal['port']}" %>
    <% link("broker").if_p('internal.ssl') do |ssl| %>
    protocol: 'https'
    ssl: <%= JSON.dump(ssl) %>
    <% end.else do %>
    protocol: 'http'
    <% end %>

  ##############################
  # APISERVER SETTINGS #
  ##############################
  apiserver:
    ip: <%= link("service-fabrik-apiserver").p('ip') %>
    port: <%= link("service-fabrik-apiserver").p('port') %>
  
  ###################
  # BACKUP SETTINGS #
  ###################
  backup:
    provider: <%= JSON.dump(link("broker").p('backup.provider', nil)) %>

  #################################
  # VIRTUAL HOST MANAGER SETTINGS #
  #################################
  virtual_host:
    provider: <%= JSON.dump(link("broker").p('virtual_host.provider', nil)) %>

  #########################
  # CLOUDFOUNDRY SETTINGS #
  #########################
  cf:
    url: <%= link("broker").p('cf.url') %>
    username: <%= link("broker").p('cf.username') %>
    password: <%= link("broker").p('cf.password') %>
 # etcd:
 #   url: <%= link("broker").p('etcd.url') %>
 #   ssl: <%= JSON.dump(link("broker").p('etcd.ssl')) %>

  #####################
  # DIRECTOR SETTINGS #
  #####################
  directors: <%= JSON.dump(link("broker").p('directors')) %>
  ####################
  # SERVICES CATALOG #
  ####################
  services: <%= JSON.pretty_generate(link("broker").p('services')) %>
